diff -urp linux-4.1.13-1/drivers/ata/pata_cs5536.c linux-4.1.13-2/drivers/ata/pata_cs5536.c
--- linux-4.1.13-1/drivers/ata/pata_cs5536.c	2015-11-09 23:34:10.000000000 +0100
+++ linux-4.1.13-2/drivers/ata/pata_cs5536.c	2015-12-09 17:53:40.893234612 +0100
@@ -33,6 +33,7 @@
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/pci.h>
+#include <linux/init.h>
 #include <linux/blkdev.h>
 #include <linux/delay.h>
 #include <linux/libata.h>
@@ -41,7 +42,7 @@
 
 #ifdef CONFIG_X86_32
 #include <asm/msr.h>
-static int use_msr;
+static int use_msr = 1;
 module_param_named(msr, use_msr, int, 0644);
 MODULE_PARM_DESC(msr, "Force using MSR to configure IDE function (Default: 0)");
 #else
@@ -80,6 +81,19 @@ enum {
 	IDE_ETC_UDMA_MASK	= 0xc0,
 };
 
+/*
+ * The mfgpt timer interrupt is running early, so we must keep the south bridge
+ * mmio always enabled. Otherwise we may race with the PCI configuration which
+ * may temporarily disable it. When that happens and the timer interrupt fires,
+ * we are not able to clear it and the system will hang.
+ */
+static void cs5536_isa_mmio_always_on(struct pci_dev *dev)
+{
+        dev->mmio_always_on = 1;
+}
+DECLARE_PCI_FIXUP_CLASS_EARLY(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_CS5536_ISA, PCI_CLASS_BRIDGE_ISA, 8, cs5536_isa_mmio_always_on);
+
+
 /* Some Bachmann OT200 devices have a non working UDMA support due a
  * missing resistor.
  */
@@ -267,6 +281,7 @@ static int cs5536_init_one(struct pci_de
 	const struct ata_port_info *ppi[2];
 	u32 cfg;
 
+
 	if (dmi_check_system(udma_quirk_dmi_table))
 		ppi[0] = &no_udma_info;
 	else
@@ -275,7 +290,13 @@ static int cs5536_init_one(struct pci_de
 	ppi[1] = &ata_dummy_port_info;
 
 	if (use_msr)
+	{
 		printk(KERN_ERR DRV_NAME ": Using MSR regs instead of PCI\n");
+		cs5536_write( dev,  CFG, 0x0010002 );
+		cs5536_write( dev,  DTC, 0x2020000 );
+		cs5536_write( dev, CAST, 0x2000000 );
+		cs5536_write( dev,  ETC, 0x0000000 );
+	}
 
 	cs5536_read(dev, CFG, &cfg);
 
